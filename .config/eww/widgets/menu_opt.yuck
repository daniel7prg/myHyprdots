;; user_info
(defwidget _user []
  (box :orientation "h" :space-evenly false :vexpand false :hexpand false :width 225 :spacing 10
    (eventbox :onclick "scripts/chooseuser& scripts/launch_menu"
              :cursor "pointer" :tooltip "Select image user"
      (box :class "user_img" :vexpand false :hexpand false :valign "center"
            :style "background-image: url('${user_icon}');"
      )
    )
    (box :space-evenly false :orientation "v" :valign "center" :spacing 5
      (label :class "user_title" :text "USER" :halign "start")
      (label :class "user_name" :text "${usr}" :halign "start" :limit-width 20 :tooltip "${usr}")
    )
  )
)

;; quick_access
(defwidget _quick []
  (box :orientation "h" :space-evenly false :vexpand false :hexpand false :width 225
    (box :orientation "h" :space-evenly true :halign "end" :width 125)
    (box :orientation "h" :space-evenly false :width 100
      (box :orientation "v" :space-evenly true :valign "center" :width 50
        (box :class "battery" :orientation "v" :spacing 5 :space-evenly false 
             :vexpand false :hexpand false :tooltip "${battery.status}"
          (label :class "baticon" :text "${battery.icon}")
          (label :class "batinfo" :text "${battery.capacity}")
        )
      )
      (box :orientation "v" :space-evenly true :valign "center" :width 45 :spacing 3
        (eventbox :onclick "kitty --detach --working-directory ~/.config/hypr/conf& scripts/launch_menu"
                  :class "btn_quick" :cursor "pointer"
                  :tooltip "Settings (CLI)"
          (label :class "icon_settings" :text "" :halign "center")
        )
        (eventbox :class "btn_quick" :onclick "scripts/launch_help& scripts/launch_menu" :cursor "pointer" :tooltip "Help"
          (label :class "icon_help" :text "" :halign "center")
        )
        (eventbox :onclick "sh -c '(sleep 0.5s; ${open_logout})' & disown && scripts/launch_menu"
                  :class "btn_quick" :cursor "pointer"
                  :tooltip "Power"
          (label :class "icon_power" :text "" :halign "center")
        )
      )
    )
  )
)

;; network
(defwidget network []
  (box :class "box_opt" :vexpand false :hexpand false :orientation "h" :space-evenly false
    (eventbox :class "${network.type == 'Internet' && network.type != 'ethernet' ? 'disable' : 'btn_net'}" 
              :onclick "${network.type == 'Internet' && network.type != 'ethernet' ? 'nmcli radio wifi on' : 'nmcli radio wifi off'}" 
              :tooltip "On/Off" :cursor "pointer" :width 130
      (box :space-evenly false :orientation "h"
        (box :space-evenly false :orientation "v" :valign "center" :width 40
          (label :class "network_icon" :text "${network.icon}")
        )
        (box :space-evenly false :orientation "v" :valign "center"
          (label :class "network_type" :text "${network.type}" :halign "start" :limit-width 8)
          (label :class "network_name" :text "${network.name}" :halign "start" :limit-width 10)
        )
      )
    )
    (eventbox :class "${network.type == 'Internet' && network.type != 'ethernet' ? 'disable_opt' : 'btn_net_opt'}"  
              :tooltip "Options"
              :onclick "pkill -x yad || scripts/wifi& scripts/launch_menu" 
              :cursor "pointer" :width 34
      (label :text "" :halign "center")
    )
  )
)

;; bluetooth
(defwidget bluetooth []
  (box :class "box_opt" :vexpand false :hexpand false :orientation "h" :space-evenly false
    (eventbox :class "${bluetooth.status == 'off' ? 'disable' : 'btn_bluet'}" :cursor "pointer"
              :tooltip "On/Off" :width 130
              :onclick "${bluetooth.status == 'off' ? 'bluetoothctl power on' : 'bluetoothctl power off'}"
      (box :space-evenly false :orientation "h"
        (box :space-evenly false :orientation "v" :valign "center" :width 40
          (label :class "blue_icon" :text "${bluetooth.icon}")
        )
        (box :space-evenly false :orientation "v" :valign "center"
          (label :class "blue_type" :text "Bluetooth" :halign "start" :limit-width 8)
          (label :class "blue_name" :text "${bluetooth.name}" :halign "start" :limit-width 10)
        )
      )
    )
    (eventbox :class "${bluetooth.status == 'off' ? 'disable_opt' : 'btn_bluet_opt'}"  
              :tooltip "Options"
              :onclick "pkill -x blueman-manager || blueman-manager& scripts/launch_menu" 
              :cursor "pointer" :width 34
      (label :text "" :halign "center")
    )
  )
)

;; Sysinfo
(defwidget info_mem []
  (box :class "bx_sys" :orientation "h" :space-evenly true 
       :vexpand false :hexpand false :width 281 :valign "center"
    (box :class "bx_sys_per" :space-evenly true :vexpand false :hexpand false
      (circular-progress 
        :value {EWW_RAM.used_mem_perc} :class "sysbar" :thickness 3
        :tooltip "Used"
        (label :class "txt_sys_perc" :text "${round(EWW_RAM.used_mem_perc, 0)}%")
      )
    )
    (label :class "txt_sys" :text "RAM " :halign "start")
    (box :class "bx_sys_per" :space-evenly true :vexpand false :hexpand false
      (circular-progress 
        :value {EWW_DISK["/"].used_perc} :class "sysbar" :thickness 3
        :tooltip "Used"
        (label :class "txt_sys_perc" :text "${round(EWW_DISK["/"].used_perc, 0)}%")
      )
    )
    (label :class "txt_sys" :text "DISK 󰋊" :halign "start")
  )
)

(defwidget info_cpu []
  (box :class "bx_sys" :orientation "h" :space-evenly true 
       :vexpand false :hexpand false :width 281 :valign "center"
    (box :class "bx_sys_per" :space-evenly true :vexpand false :hexpand false
      (circular-progress 
        :value {EWW_CPU.avg} :class "sysbar" :thickness 2
        :tooltip "Used"
        (label :class "txt_sys_perc" :text "${round(EWW_CPU.avg, 0)}%")
      )
    )
    (label :class "txt_sys" :text "CPU " :halign "start")
    (box :class "bx_sys_per" :space-evenly true :vexpand false :hexpand false
      (circular-progress 
        :value {EWW_TEMPS.ACPITZ_TEMP1} :class "sysbar" :thickness 3
        :tooltip "Grades"
        (label :class "txt_sys_perc" :text "${EWW_TEMPS.ACPITZ_TEMP1}󰔄")
      )
    )
    (label :class "txt_sys" :text "TEMP 󱌥" :halign "start")
  )
)

(defwidget _sliders []
  (box :orientation "v" :space-evenly true :vexpand false :hexpand false :width 300 :spacing 15
    
    (box :orientation "h" :space-evenly false :vexpand false :hexpand false :halign "start" :spacing 7
      (overlay :vexpand false :hexpand false
        (box :class "volume_bar" :orientation "h" :spacing 20 :space-evenly false :vexpand false :hexpand false
          (scale :min 0 :max 101 :value {volume.perc} :active true :tooltip "${volume.perc}%"
                 :onchange "pactl set-sink-volume @DEFAULT_SINK@ {}%")
        )
        (label :class "${volume.perc <= 10 ? 'iconvolume_empty' : 'iconvolume'}" :text "${volume.icon}" :halign "start")
      )
      (box :class "volume_opt" :orientation "h" :space-evenly false :vexpand false :hexpand false
        (eventbox :width 35 :class "volume_btn_mute"
                  :onclick "${volume.status == 'yes' ? 'pactl set-sink-mute @DEFAULT_SINK@ toggle' : 'pactl set-sink-mute @DEFAULT_SINK@ toggle' }" 
                  :cursor "pointer" :tooltip "Mute/Unmute"
          (label :class "iconvolume_mute" :text "${volume.icon}")
        )
        (eventbox :width 15 :class "volume_btn_opt"
                  :onclick "pkill -x pavucontrol || pavucontrol -t 3& scripts/launch_menu" 
                  :cursor "pointer" :tooltip "Options"
          (label :class "iconvolume_opt" :text "")
        )
      )
    )
    (overlay :vexpand false :hexpand false :halign "start"
      (box :class "bright_bar" :orientation "h" :spacing 20 :space-evenly false :vexpand false :hexpand false
        (scale :min 0 :max 101 :value blight :active true :tooltip "${blight}%"
               :onchange "brightnessctl -q set {}")
      )
      (label :width 35 :class "${blight <= 8 ? 'iconbright_empty' : 'iconbright'}" :text "" :halign "start")
    )
  )
)

;; Color Mode
(defwidget _cmode []
  (box :class "box_opt" :vexpand false :hexpand false :orientation "h" :width 160
    (eventbox :class "btn_colorm"
              :cursor "pointer"
              :tooltip "Switch mode"
              :onclick "scripts/switch-theme& eww close menu_opt music calendar help_opt"
      (box :space-evenly false :orientation "h"
        (box :space-evenly false :orientation "v" :valign "center" :width 40
          (label :class "color_icon" 
                 :text "${switcher == "1" ? '' : '󰃠'}")
        )
        (box :space-evenly false :orientation "v" :valign "center"
          (label :class "color_type" :text "Color Mode" :halign "start")
          (label :class "color_name" :halign "start"
                 :text "${switcher == "1" ? 'Dark' : 'Light'}")
        )
      )
    )
  )
)

;;modules
(defwidget _container []
  (box :space-evenly false :orientation "v" :spacing 15
    (box :orientation "h" :space-evenly false :spacing 15 :height 60
      (_user)
      (_quick)
    )
    (box :orientation "h" :space-evenly false :spacing 15
      (box :orientation "v" :space-evenly true :spacing 15 :height 150 :halign "start"
        (network)
        (bluetooth)
      )
      (box :orientation "v" :space-evenly true :valign "start" :class "box_osd" :height 150
        (info_mem)
        (info_cpu)
      )
    )
    (box :orientation "h" :space-evenly false
      (box :orientation "v" :space-evenly true :height 60 :valign "start"
        (_sliders)
      )
      (box :orientation "v" :space-evenly true :height 60 :valign "center"
        (_cmode)
      )
    )
    ;(box :orientation "h" :space-evenly false :spacing 15 :height 60
    ;  (_sliders)
    ;)
  )
)

;;options
(defwidget options []
  (box :class "background_main" :space-evenly false :orientation "v"
    (_container)
  )
)

;; MENU_OPT
(defwidget _menuopt []
  (box :orientation "v" :space-evenly false :class "box_rev"
    (revealer :transition "slidedown" :reveal open_menu :duration "200ms"
      (options)
    )
  )
)